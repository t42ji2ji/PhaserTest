/**
 * @author       Richard Davey <rich@photonstorm.com>
 * @author       Felipe Alfonso <@bitnenfer>
 * @copyright    2020 Photon Storm Ltd.
 * @license      {@link https://opensource.org/licenses/MIT|MIT License}
 */
var $b22f3e0975801f133bd86e3$var$BuildGameObject = $parcel$require("033907975b22f3e0975801f133bd86e3", "../BuildGameObject");
var $b22f3e0975801f133bd86e3$var$Container = $parcel$require("033907975b22f3e0975801f133bd86e3", "./Container");
var $b22f3e0975801f133bd86e3$var$GameObjectCreator = $parcel$require("033907975b22f3e0975801f133bd86e3", "../GameObjectCreator");
var $b22f3e0975801f133bd86e3$var$GetAdvancedValue = $parcel$require("033907975b22f3e0975801f133bd86e3", "../../utils/object/GetAdvancedValue");
/**
 * Creates a new Container Game Object and returns it.
 *
 * Note: This method will only be available if the Container Game Object has been built into Phaser.
 *
 * @method Phaser.GameObjects.GameObjectCreator#container
 * @since 3.4.0
 *
 * @param {object} config - The configuration object this Game Object will use to create itself.
 * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.
 *
 * @return {Phaser.GameObjects.Container} The Game Object that was created.
 */

$b22f3e0975801f133bd86e3$var$GameObjectCreator.register('container', function (config, addToScene) {
  if (config === undefined) {
    config = {};
  }

  var x = $b22f3e0975801f133bd86e3$var$GetAdvancedValue(config, 'x', 0);
  var y = $b22f3e0975801f133bd86e3$var$GetAdvancedValue(config, 'y', 0);
  var container = new $b22f3e0975801f133bd86e3$var$Container(this.scene, x, y);

  if (addToScene !== undefined) {
    config.add = addToScene;
  }

  $b22f3e0975801f133bd86e3$var$BuildGameObject(this.scene, container, config);
  return container;
});