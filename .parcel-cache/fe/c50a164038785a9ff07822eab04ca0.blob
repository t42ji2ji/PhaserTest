/**
 * @author       Richard Davey <rich@photonstorm.com>
 * @copyright    2020 Photon Storm Ltd.
 * @license      {@link https://opensource.org/licenses/MIT|MIT License}
 */
var $ca950e604e59f06bddcffc7ec34$var$BitmapText = $parcel$require("82017ca950e604e59f06bddcffc7ec34", "./DynamicBitmapText");
var $ca950e604e59f06bddcffc7ec34$var$BuildGameObject = $parcel$require("82017ca950e604e59f06bddcffc7ec34", "../../BuildGameObject");
var $ca950e604e59f06bddcffc7ec34$var$GameObjectCreator = $parcel$require("82017ca950e604e59f06bddcffc7ec34", "../../GameObjectCreator");
var $ca950e604e59f06bddcffc7ec34$var$GetAdvancedValue = $parcel$require("82017ca950e604e59f06bddcffc7ec34", "../../../utils/object/GetAdvancedValue");
/**
 * Creates a new Dynamic Bitmap Text Game Object and returns it.
 *
 * Note: This method will only be available if the Dynamic Bitmap Text Game Object has been built into Phaser.
 *
 * @method Phaser.GameObjects.GameObjectCreator#dynamicBitmapText
 * @since 3.0.0
 *Â²
 * @param {Phaser.Types.GameObjects.BitmapText.BitmapTextConfig} config - The configuration object this Game Object will use to create itself.
 * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.
 *
 * @return {Phaser.GameObjects.DynamicBitmapText} The Game Object that was created.
 */

$ca950e604e59f06bddcffc7ec34$var$GameObjectCreator.register('dynamicBitmapText', function (config, addToScene) {
  if (config === undefined) {
    config = {};
  }

  var font = $ca950e604e59f06bddcffc7ec34$var$GetAdvancedValue(config, 'font', '');
  var text = $ca950e604e59f06bddcffc7ec34$var$GetAdvancedValue(config, 'text', '');
  var size = $ca950e604e59f06bddcffc7ec34$var$GetAdvancedValue(config, 'size', false);
  var bitmapText = new $ca950e604e59f06bddcffc7ec34$var$BitmapText(this.scene, 0, 0, font, text, size);

  if (addToScene !== undefined) {
    config.add = addToScene;
  }

  $ca950e604e59f06bddcffc7ec34$var$BuildGameObject(this.scene, bitmapText, config);
  return bitmapText;
}); //  When registering a factory function 'this' refers to the GameObjectCreator context.