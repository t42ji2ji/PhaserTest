var $e8dc4480f40a582977c5cba79eae861c$exports = {};

/**
 * @author       Richard Davey <rich@photonstorm.com>
 * @copyright    2020 Photon Storm Ltd.
 * @license      {@link https://opensource.org/licenses/MIT|MIT License}
 */
var $e8dc4480f40a582977c5cba79eae861c$var$Vector3 = $parcel$require("e8dc4480f40a582977c5cba79eae861c", "../math/Vector3");
var $e8dc4480f40a582977c5cba79eae861c$var$Matrix4 = $parcel$require("e8dc4480f40a582977c5cba79eae861c", "../math/Matrix4");
var $e8dc4480f40a582977c5cba79eae861c$var$Quaternion = $parcel$require("e8dc4480f40a582977c5cba79eae861c", "../math/Quaternion");
var $e8dc4480f40a582977c5cba79eae861c$var$tmpMat4 = new $e8dc4480f40a582977c5cba79eae861c$var$Matrix4();
var $e8dc4480f40a582977c5cba79eae861c$var$tmpQuat = new $e8dc4480f40a582977c5cba79eae861c$var$Quaternion();
var $e8dc4480f40a582977c5cba79eae861c$var$tmpVec3 = new $e8dc4480f40a582977c5cba79eae861c$var$Vector3();
/**
 * Rotates a vector in place by axis angle.
 *
 * This is the same as transforming a point by an
 * axis-angle quaternion, but it has higher precision.
 *
 * @function Phaser.Math.RotateVec3
 * @since 3.0.0
 *
 * @param {Phaser.Math.Vector3} vec - The vector to be rotated.
 * @param {Phaser.Math.Vector3} axis - The axis to rotate around.
 * @param {number} radians - The angle of rotation in radians.
 *
 * @return {Phaser.Math.Vector3} The given vector.
 */

var $e8dc4480f40a582977c5cba79eae861c$var$RotateVec3 = function (vec, axis, radians) {
  //  Set the quaternion to our axis angle
  $e8dc4480f40a582977c5cba79eae861c$var$tmpQuat.setAxisAngle(axis, radians); //  Create a rotation matrix from the axis angle

  $e8dc4480f40a582977c5cba79eae861c$var$tmpMat4.fromRotationTranslation($e8dc4480f40a582977c5cba79eae861c$var$tmpQuat, $e8dc4480f40a582977c5cba79eae861c$var$tmpVec3.set(0, 0, 0)); //  Multiply our vector by the rotation matrix

  return vec.transformMat4($e8dc4480f40a582977c5cba79eae861c$var$tmpMat4);
};

$e8dc4480f40a582977c5cba79eae861c$exports = $e8dc4480f40a582977c5cba79eae861c$var$RotateVec3;