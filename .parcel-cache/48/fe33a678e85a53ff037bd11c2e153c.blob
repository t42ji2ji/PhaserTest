var $df8b5f19a2d6ce1c0932a71e77db095f$exports = {};

/**
 * @author       Richard Davey <rich@photonstorm.com>
 * @copyright    2020 Photon Storm Ltd.
 * @license      {@link https://opensource.org/licenses/MIT|MIT License}
 */
var $df8b5f19a2d6ce1c0932a71e77db095f$var$Class = $parcel$require("df8b5f19a2d6ce1c0932a71e77db095f", "../utils/Class");
var $df8b5f19a2d6ce1c0932a71e77db095f$var$PluginCache = $parcel$require("df8b5f19a2d6ce1c0932a71e77db095f", "../plugins/PluginCache");
var $df8b5f19a2d6ce1c0932a71e77db095f$var$SceneEvents = $parcel$require("df8b5f19a2d6ce1c0932a71e77db095f", "../scene/events");
/**
 * @classdesc
 * The Game Object Creator is a Scene plugin that allows you to quickly create many common
 * types of Game Objects and return them. Unlike the Game Object Factory, they are not automatically
 * added to the Scene.
 *
 * Game Objects directly register themselves with the Creator and inject their own creation
 * methods into the class.
 *
 * @class GameObjectCreator
 * @memberof Phaser.GameObjects
 * @constructor
 * @since 3.0.0
 *
 * @param {Phaser.Scene} scene - The Scene to which this Game Object Factory belongs.
 */

var $df8b5f19a2d6ce1c0932a71e77db095f$var$GameObjectCreator = new $df8b5f19a2d6ce1c0932a71e77db095f$var$Class({
  initialize: function GameObjectCreator(scene) {
    /**
     * The Scene to which this Game Object Creator belongs.
     *
     * @name Phaser.GameObjects.GameObjectCreator#scene
     * @type {Phaser.Scene}
     * @protected
     * @since 3.0.0
     */
    this.scene = scene;
    /**
     * A reference to the Scene.Systems.
     *
     * @name Phaser.GameObjects.GameObjectCreator#systems
     * @type {Phaser.Scenes.Systems}
     * @protected
     * @since 3.0.0
     */

    this.systems = scene.sys;
    /**
     * A reference to the Scene Display List.
     *
     * @name Phaser.GameObjects.GameObjectCreator#displayList
     * @type {Phaser.GameObjects.DisplayList}
     * @protected
     * @since 3.0.0
     */

    this.displayList;
    /**
     * A reference to the Scene Update List.
     *
     * @name Phaser.GameObjects.GameObjectCreator#updateList
     * @type {Phaser.GameObjects.UpdateList}
     * @protected
     * @since 3.0.0
     */

    this.updateList;
    scene.sys.events.once($df8b5f19a2d6ce1c0932a71e77db095f$var$SceneEvents.BOOT, this.boot, this);
    scene.sys.events.on($df8b5f19a2d6ce1c0932a71e77db095f$var$SceneEvents.START, this.start, this);
  },

  /**
   * This method is called automatically, only once, when the Scene is first created.
   * Do not invoke it directly.
   *
   * @method Phaser.GameObjects.GameObjectCreator#boot
   * @private
   * @since 3.5.1
   */
  boot: function () {
    this.displayList = this.systems.displayList;
    this.updateList = this.systems.updateList;
    this.systems.events.once($df8b5f19a2d6ce1c0932a71e77db095f$var$SceneEvents.DESTROY, this.destroy, this);
  },

  /**
   * This method is called automatically by the Scene when it is starting up.
   * It is responsible for creating local systems, properties and listening for Scene events.
   * Do not invoke it directly.
   *
   * @method Phaser.GameObjects.GameObjectCreator#start
   * @private
   * @since 3.5.0
   */
  start: function () {
    this.systems.events.once($df8b5f19a2d6ce1c0932a71e77db095f$var$SceneEvents.SHUTDOWN, this.shutdown, this);
  },

  /**
   * The Scene that owns this plugin is shutting down.
   * We need to kill and reset all internal properties as well as stop listening to Scene events.
   *
   * @method Phaser.GameObjects.GameObjectCreator#shutdown
   * @private
   * @since 3.0.0
   */
  shutdown: function () {
    this.systems.events.off($df8b5f19a2d6ce1c0932a71e77db095f$var$SceneEvents.SHUTDOWN, this.shutdown, this);
  },

  /**
   * The Scene that owns this plugin is being destroyed.
   * We need to shutdown and then kill off all external references.
   *
   * @method Phaser.GameObjects.GameObjectCreator#destroy
   * @private
   * @since 3.0.0
   */
  destroy: function () {
    this.shutdown();
    this.scene.sys.events.off($df8b5f19a2d6ce1c0932a71e77db095f$var$SceneEvents.START, this.start, this);
    this.scene = null;
    this.systems = null;
    this.displayList = null;
    this.updateList = null;
  }
}); //  Static method called directly by the Game Object creator functions

$df8b5f19a2d6ce1c0932a71e77db095f$var$GameObjectCreator.register = function (factoryType, factoryFunction) {
  if (!$df8b5f19a2d6ce1c0932a71e77db095f$var$GameObjectCreator.prototype.hasOwnProperty(factoryType)) {
    $df8b5f19a2d6ce1c0932a71e77db095f$var$GameObjectCreator.prototype[factoryType] = factoryFunction;
  }
};

$df8b5f19a2d6ce1c0932a71e77db095f$var$GameObjectCreator.remove = function (factoryType) {
  if ($df8b5f19a2d6ce1c0932a71e77db095f$var$GameObjectCreator.prototype.hasOwnProperty(factoryType)) {
    delete $df8b5f19a2d6ce1c0932a71e77db095f$var$GameObjectCreator.prototype[factoryType];
  }
};

$df8b5f19a2d6ce1c0932a71e77db095f$var$PluginCache.register('GameObjectCreator', $df8b5f19a2d6ce1c0932a71e77db095f$var$GameObjectCreator, 'make');
$df8b5f19a2d6ce1c0932a71e77db095f$exports = $df8b5f19a2d6ce1c0932a71e77db095f$var$GameObjectCreator;